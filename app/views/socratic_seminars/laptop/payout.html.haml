.container{"data-controller" => "payout-animation"}
  .payout-page
    .page-header
      .page-header-row
        .page-header-container
          %h1.page-title
            Bitcoin Payout
            .seminar-info
              = @socratic_seminar.organization.name + " ##{@socratic_seminar.seminar_number}"

        .header-actions
          .sats-btc-toggle
            %span.toggle-label.toggle-label-sats Sats
            %label.switch
              %input#satsBtcToggleSlider{type: "checkbox"}
              %span.slider
            %span.toggle-label.toggle-label-btc â‚¿
          = link_to "Back to Seminar", socratic_seminar_topics_path(@socratic_seminar), class: "button button-secondary"

    .payout-sections
      .payout-section
        %h2.section-title
          %i.fas.fa-coins
          Total Payments Received
        .payout-amount
          .amount-display
            %span.amount-unit sats
            %span.amount-value.sats-received{"data-sats" => @total_payments_received}= format_with_commas(@total_payments_received)
          .amount-description
            Total Lightning payments received for all topics in this seminar

      .payout-section
        %h2.section-title
          %i.fas.fa-arrow-up{"data-payout-animation-target" => "lightningElement"}
          Total Payouts to Organization
        .payout-amount
          .amount-display
            %span.amount-unit sats
            %span.amount-value.sats-received{"data-sats" => @total_payouts, "data-payout-animation-target" => "payoutAmount"}= format_with_commas(@total_payouts)
          .amount-description
            Total amount paid out to the organization

      .payout-section
        %h2.section-title
          %i.fas.fa-calculator
          Available for Payout
        .payout-amount
          .amount-display
            %span.amount-unit sats
            %span.amount-value.sats-received{"data-sats" => @total_payments_received - @total_payouts}= format_with_commas(@total_payments_received - @total_payouts)
          .amount-description
            Amount available to be paid out to the organization

    - if notice
      .payout-status-message.success{"data-payout-animation-target" => "successMessage"}
        %i.fas.fa-check-circle
        = notice

    - if alert
      .payout-status-message.error
        %i.fas.fa-exclamation-triangle
        = alert

    .payout-actions
      .action-buttons
        - if @can_payout
          = form_tag process_payout_socratic_seminar_path(@socratic_seminar), method: :post, data: { confirm: "Are you sure you want to process a payout of #{format_with_commas(@available_for_payout)} sats to #{@socratic_seminar.organization.name}?" } do
            .bolt11-input-section{"data-controller" => "qr-scanner"}
              %label.bolt11-label{for: "bolt11_invoice"}
                %i.fas.fa-bolt
                BOLT11 Invoice
              .bolt11-input-row
                %textarea#bolt11_invoice.bolt11-input{name: "bolt11_invoice", placeholder: "Enter BOLT11 invoice (lnbc1...)", rows: 3, required: true, "data-qr-scanner-target" => "input"}
                %button.qr-scan-button{type: "button", "data-action" => "click->qr-scanner#startScanning"}
                  %i.fas.fa-qrcode
                  Scan QR
              .bolt11-help
                %i.fas.fa-info-circle
                An invoice with an amount is required for payout.
              .bolt11-help
                %i.fas.fa-info-circle
                Enter a BOLT11 invoice for up to #{format_with_commas(@available_for_payout)} sats to pay out the funds.

              .qr-scanner-modal.hidden{"data-qr-scanner-target" => "modal"}
                .qr-scanner-container
                  .qr-scanner-header
                    .qr-scanner-title
                      %i.fas.fa-qrcode
                      Scan BOLT11 Invoice QR Code
                    %button.qr-scanner-close{"data-action" => "click->qr-scanner#stopScanning"}
                      %i.fas.fa-times
                  .qr-scanner-video-container
                    %video.qr-scanner-video{"data-qr-scanner-target" => "video"}

            %button.button.button-primary{type: "submit", "data-payout-animation-target" => "processButton"}
              %i.fas.fa-paper-plane
              Process Payout
        - else
          %button.button.button-primary.disabled{"disabled" => "disabled"}
            %i.fas.fa-paper-plane
            Process Payout
          .button-note
            %i.fas.fa-exclamation-triangle
            - if @socratic_seminar.organization.bolt12_invoice.blank?
              Organization needs a bolt12 invoice configured
            - elsif @available_for_payout <= 0
              No funds available for payout
            - else
              Payout not available

    .payout-details
      %h3.section-subtitle Payment Details by Topic
      .topics-payments
        - @socratic_seminar.sections.includes(:topics).each do |section|
          %h4.section-name= section.name
          - section.topics.each do |topic|
            - topic_payments = topic.payments.where(paid: true).sum(:amount)
            - if topic_payments > 0
              .topic-payment-row
                .topic-info
                  %span.topic-name= topic.name
                  .topic-payment-amount
                    %span.topic-amount-unit sats
                    %span.sats-received{"data-sats" => topic_payments}= format_with_commas(topic_payments)

                .topic-payment-count
                  = topic.completed_payments_count
                  payment#{topic.completed_payments_count == 1 ? '' : 's'}
