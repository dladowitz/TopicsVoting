.seminars
  - content_for :title, "New Socratic Seminar"

  .socratic-seminars
    %h1
      - if @organization
        New Socratic Seminar for #{link_to @organization.name, organization_path(@organization)}
      - else
        New Socratic Seminar
    - if can? :create, SocraticSeminar
      = form_with(model: @socratic_seminar, local: true, class: 'seminar-form') do |f|
        - if @socratic_seminar.errors.any?
          #error_explanation
            %h2= "#{pluralize(@socratic_seminar.errors.count, "error")} prohibited this seminar from being saved:"
            %ul
              - socratic_seminar.errors.full_messages.each do |msg|
                %li= msg

        .field.seminar-number
          = f.label :seminar_number, "Seminar Number"
          = f.number_field :seminar_number, required: true, min: 1, max: 999, placeholder: "Enter seminar number (1-999)", value: @next_seminar_number
          .field-hint
            - if @next_seminar_number
              = "The next Seminar Number is #{@next_seminar_number}"
            - else
              Required field (1-999)

        .field
          = f.label :date, "Date"
          = f.date_field :date, required: true, placeholder: "Select seminar date"
          .field-hint Required field

        .field
          = f.label :topics_list_url, "Topic List URL"
          = f.text_field :topics_list_url, placeholder: (@organization ? "#{@organization.website}/seminar-XX" : "https://example.com/seminar-XX")
          .field-hint
            Optional: If you already have a topic list in markdown format, enter the URL here.
            %br
            You can use the import feature on the next page.

        - if @organization
          = f.hidden_field :organization_id, value: @organization.id
        - else
          .field
            = f.label :organization_id, "Organization"
            = f.collection_select :organization_id, Organization.all, :id, :name, { prompt: "Select an organization" }, required: true
            .field-hint Required field

        .actions
          = f.submit class: 'button'
          = link_to 'Cancel', organization_path(@organization), class: 'button button-secondary'

    - else
      .access-denied
        %p You need admin privileges to create seminars.

    .actions
      - if @organization
        = link_to "Back to Organization", organization_path(@organization), class: 'button'
      - else
        = link_to "Back to Seminars", socratic_seminars_path, class: 'button'
